plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.mysite'
version = '0.0.3-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// devtools : 수정 변경 시 자동으로 톰캣 자동 restart (중지 -> 시작) : 자동으로 컴파일
	// development : 실제 서비스로 빌드할 때는 빌드되지 않도록 설정 , 개발 시에만 필요함.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//lombok 라이브러리 등록
	compileOnly 'org.projectlombok:lombok'		 	//컴파일 단계에서만 필요한 경우에 사용됨
	annotationProcessor 'org.projectlombok:lombok' 	//컴파일단계에서 어노테이션을 분석 처리함
	//H2 라이브러리
	//runtimeOnly 'com.H2database:H2'
	runtimeOnly 'com.h2database:h2'				//실행시에만 작동, 테스트 환경
	//JPA 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	//Thymeleaf : View Page , 백엔드에서 처리한 데이터를 .html에 넣어줄 수 있도록 처리해주는 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
 	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//Spring 에서 제공해주는 유효성 검사 라이브러리 : form에서 빈값이나 글자 수 제한
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	//스프링 시큐리티와 관련 타임리프 라이브러리 (2월 15일)
	//라이브러리를 설치하는 순간 프로젝트의 모든 내용 접근은 인증을 받아야 접근 가능하다.
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'

	//commonmark 라이브러리 : 스프링부트가 내부적으로 관리하는 라이브러리가 아니기 때문에  버전 정보가 필요하다.
	//스프링부트가 관리하는 라이브러리는 버전정보를 명시하지 않으면 가장 궁합 좋은 버전을 자동 선택한다.
	implementation 'org.commonmark:commonmark:0.21.0'
	
	//Oracle 라이브러리
	//implementation 'com.oracle database.jdbc:ojdbc10'
	implementation 'com.oracle.database.jdbc:ojdbc11'
	
	//JDBC
	implementation	'org.springframework.boot:spring-boot-starter-jdbc'
}

tasks.named('test') {
	useJUnitPlatform()
}
